<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <NavigationAction />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Hospitals' inline='true' name='federated.0o9a3630y681zw1702iwh0tmi8as' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Hospitals' name='textscan.1fppqiw07vbmeq1bg1nt309p7vde'>
            <connection class='textscan' directory='D:/Study/23SQ Visual Analytics/VA #4' filename='Hospitals.csv' password='' server='' />
          </named-connection>
          <named-connection caption='us_pop_by_state' name='textscan.0jrxl9f0f9l1yc1b52zbe112y0fx'>
            <connection class='textscan' directory='D:/Study/23SQ Visual Analytics/VA #4' filename='AvgHealthSpendingPerState.csv' password='' server='' />
          </named-connection>
          <named-connection caption='AvgHealthSpendingPerState' name='textscan.0ovciif07tq2ws1dw40610s84bg7'>
            <connection class='textscan' directory='D:/Study/23SQ Visual Analytics/VA #4' filename='AvgHealthSpendingPerState.csv' password='' server='' />
          </named-connection>
          <named-connection caption='us_pop_by_state (2)' name='textscan.09h518b028ff7j15yiix20kgse92'>
            <connection class='textscan' directory='D:/Study/23SQ Visual Analytics/VA #4' filename='us_pop_by_state.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ovciif07tq2ws1dw40610s84bg7' name='AvgHealthSpendingPerState.csv' table='[AvgHealthSpendingPerState#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='State Code' ordinal='1' />
            <column datatype='integer' name='Health Spending per Capita' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1fppqiw07vbmeq1bg1nt309p7vde' name='Hospitals.csv' table='[Hospitals#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='X' ordinal='0' />
              <column datatype='real' name='Y' ordinal='1' />
              <column datatype='integer' name='OBJECTID' ordinal='2' />
              <column datatype='integer' name='ID' ordinal='3' />
              <column datatype='string' name='NAME' ordinal='4' />
              <column datatype='string' name='ADDRESS' ordinal='5' />
              <column datatype='string' name='CITY' ordinal='6' />
              <column datatype='string' name='STATE' ordinal='7' />
              <column datatype='integer' name='ZIP' ordinal='8' />
              <column datatype='string' name='TELEPHONE' ordinal='9' />
              <column datatype='string' name='TYPE' ordinal='10' />
              <column datatype='string' name='STATUS' ordinal='11' />
              <column datatype='integer' name='POPULATION' ordinal='12' />
              <column datatype='string' name='COUNTY' ordinal='13' />
              <column datatype='integer' name='COUNTYFIPS' ordinal='14' />
              <column datatype='string' name='COUNTRY' ordinal='15' />
              <column datatype='real' name='LATITUDE' ordinal='16' />
              <column datatype='real' name='LONGITUDE' ordinal='17' />
              <column datatype='integer' name='NAICS_CODE' ordinal='18' />
              <column datatype='string' name='NAICS_DESC' ordinal='19' />
              <column datatype='string' name='WEBSITE' ordinal='20' />
              <column datatype='string' name='STATE_ID' ordinal='21' />
              <column datatype='integer' name='ST_FIPS' ordinal='22' />
              <column datatype='string' name='OWNER' ordinal='23' />
              <column datatype='integer' name='BEDS' ordinal='24' />
              <column datatype='string' name='TRAUMA' ordinal='25' />
              <column datatype='string' name='HELIPAD' ordinal='26' />
            </columns>
          </relation>
          <relation connection='textscan.0ovciif07tq2ws1dw40610s84bg7' name='AvgHealthSpendingPerState.csv' table='[AvgHealthSpendingPerState#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='State Code' ordinal='1' />
              <column datatype='integer' name='Health Spending per Capita' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.0jrxl9f0f9l1yc1b52zbe112y0fx' name='us_pop_by_state.csv' table='[us_pop_by_state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='rank' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='string' name='state_code' ordinal='2' />
              <column datatype='integer' name='2020_census' ordinal='3' />
              <column datatype='real' name='percent_of_total' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AvgHealthSpendingPerState.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBJECTID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OBJECTID]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>OBJECTID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TELEPHONE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TELEPHONE]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>TELEPHONE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TYPE]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>TYPE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATUS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATUS]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>STATUS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POPULATION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[POPULATION]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>POPULATION</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTYFIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTYFIPS]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>COUNTYFIPS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAICS_CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NAICS_CODE]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>NAICS_CODE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAICS_DESC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAICS_DESC]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>NAICS_DESC</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEBSITE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WEBSITE]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>WEBSITE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE_ID]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>STATE_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ST_FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ST_FIPS]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>ST_FIPS</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OWNER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OWNER]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>OWNER</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BEDS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BEDS]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>BEDS</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRAUMA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRAUMA]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>TRAUMA</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HELIPAD</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HELIPAD]</local-name>
            <parent-name>[Hospitals.csv]</parent-name>
            <remote-alias>HELIPAD</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[AvgHealthSpendingPerState.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AvgHealthSpendingPerState.csv_86B3620D0FD04BA696B8B7071726BC37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Code]</local-name>
            <parent-name>[AvgHealthSpendingPerState.csv]</parent-name>
            <remote-alias>State Code</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AvgHealthSpendingPerState.csv_86B3620D0FD04BA696B8B7071726BC37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending per Capita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending per Capita]</local-name>
            <parent-name>[AvgHealthSpendingPerState.csv]</parent-name>
            <remote-alias>Health Spending per Capita</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AvgHealthSpendingPerState.csv_86B3620D0FD04BA696B8B7071726BC37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rank]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>rank</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020_census</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020_census]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>2020_census</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_of_total]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>percent_of_total</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='State population' datatype='integer' name='[2020_census]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal' />
      <column caption='Beds' datatype='integer' name='[BEDS]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Countyfips' datatype='integer' name='[COUNTYFIPS]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Calculation1' datatype='real' name='[Calculation_111675215390949377]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([POPULATION])/countd([STATE_ID])' />
      </column>
      <column caption='Hospitals' datatype='real' name='[Calculation_111675215406559234]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([NAME])/countd([STATE])' />
      </column>
      <column caption='Statewise distribution of hospitals' datatype='real' name='[Calculation_242068498815131649]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([NAME]) / COUNTD([STATE])' />
      </column>
      <column caption='Bed per 1000 people' datatype='real' name='[Calculation_87609105536208896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([POPULATION])*1000/sum([2020_census])' />
      </column>
      <column caption='Helipad' datatype='string' name='[HELIPAD]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Naics Code' datatype='integer' name='[NAICS_CODE]' role='dimension' type='ordinal' />
      <column caption='Naics Desc' datatype='string' name='[NAICS_DESC]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column caption='Objectid' datatype='integer' name='[OBJECTID]' role='measure' type='quantitative' />
      <column caption='Owner' datatype='string' name='[OWNER]' role='dimension' type='nominal' />
      <column caption='Number of beds' datatype='integer' name='[POPULATION]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Id' datatype='string' name='[STATE_ID]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Status' datatype='string' name='[STATUS]' role='dimension' type='nominal' />
      <column caption='St Fips' datatype='integer' name='[ST_FIPS]' role='measure' type='quantitative' />
      <column caption='State Code1' datatype='string' name='[State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State2' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Telephone' datatype='string' name='[TELEPHONE]' role='dimension' type='nominal' />
      <column caption='Trauma' datatype='string' name='[TRAUMA]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[TYPE]' role='dimension' type='nominal' />
      <column caption='Website' datatype='string' name='[WEBSITE]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='AvgHealthSpendingPerState.csv' datatype='table' name='[__tableau_internal_object_id__].[AvgHealthSpendingPerState.csv_86B3620D0FD04BA696B8B7071726BC37]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Hospitals.csv' datatype='table' name='[__tableau_internal_object_id__].[Hospitals.csv_65838E37D7E5406FA447F19253B5699D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_pop_by_state.csv' datatype='table' name='[__tableau_internal_object_id__].[us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918]' role='measure' type='quantitative' />
      <column caption='Percent Of Total' datatype='real' name='[percent_of_total]' role='measure' type='quantitative' />
      <column caption='Rank' datatype='real' name='[rank]' role='measure' type='quantitative' />
      <column caption='State1' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
      <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[OWNER]' derivation='None' name='[none:OWNER:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[TYPE]' derivation='None' name='[none:TYPE:nk]' pivot='key' type='nominal' />
      <group caption='Action (Owner)' hidden='true' name='[Action (Owner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[OWNER]' />
        </groupfilter>
      </group>
      <group caption='Action (Owner,State)' hidden='true' name='[Action (Owner,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[OWNER]' />
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Action (State,State2)' hidden='true' name='[Action (State,State2)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Type)' hidden='true' name='[Action (Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[TYPE]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country,State)' hidden='true' name='[Tooltip (Country,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[COUNTRY]' />
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (County)' hidden='true' name='[Tooltip (County)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[COUNTY]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Latitude,Longitude,Name,Type)' hidden='true' name='[Tooltip (Latitude,Longitude,Name,Type)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:LATITUDE:ok]' />
          <groupfilter function='level-members' level='[none:LONGITUDE:ok]' />
          <groupfilter function='level-members' level='[NAME]' />
          <groupfilter function='level-members' level='[TYPE]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State,State2)' hidden='true' name='[Tooltip (State,State2)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTY:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ALAMANCE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ANOKA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AUGUSTA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BAXTER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BERNALILLO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BOYLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BUENA VISTA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CALHOUN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CARVER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHELAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CLAIBORNE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CODINGTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;COOKE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CUMBERLAND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DECATUR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DORCHESTER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ECTOR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EVANS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FORSYTH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GASTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GRAND FORKS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GUAYAMA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HARRIS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HIGHLANDS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HUBBARD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IRWIN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KANDIYOHI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KNOX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LASALLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LEXINGTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LYNCHBURG CITY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MARLBORO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MCLEAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MILLER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MONTROSE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NATCHITOCHES&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NOBLES&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OKLAHOMA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OVERTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PERRY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PLYMOUTH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PUEBLO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RIVERSIDE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SABINE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SANDUSKY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SENECA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SNOHOMISH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ST. LOUIS CITY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;STODDARD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TANEY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TOLLAND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UMATILLA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WAGONER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WEBB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WILLIAMS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YAKIMA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ACADIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALPENA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ASHLAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BARNSTABLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BELTRAMI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BONNEVILLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BROOME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CABARRUS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CAPE MAY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHARLES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHISAGO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CLERMONT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COLUMBUS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRAWFORD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DAVIDSON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DEWITT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DUVAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EMMET&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FINNEY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GAINES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GLOUCESTER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GREENUP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HAMPTON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HENDRICKS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HOPEWELL CITY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IMPERIAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JOHNSON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KERR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAMAR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LEHIGH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LOUDON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MANISTEE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MAYES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MERIWETHER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MONMOUTH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MUSCOGEE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NEW YORK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OBION&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OSCEOLA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PAWNEE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PIMA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;POWESHIEK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RENO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROGERS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SAN GERMÁN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SCHUYLKILL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SIERRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ST. FRANCIS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;STAUNTON CITY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SURRY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;THURSTON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TUOLUMNE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VENTURA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WASECA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WHITESIDE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WOOD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AGUADILLA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ANDREWS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ATHENS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BARTHOLOMEW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BERGEN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BOURBON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BRUNSWICK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CADDO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CARROLL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHATHAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHRISTIAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COBB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CONCORDIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CRITTENDEN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DAVISON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DINWIDDIE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EAST FELICIANA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ESCAMBIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FLOYD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GALVESTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GOODHUE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GRENADA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HARDIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HERNANDO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HOUGHTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;INGHAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JUNEAU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KIOWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LAPEER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LETCHER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LUCAS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MARICOPA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MCDOWELL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MIAMI-DADE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MONTCALM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NACOGDOCHES&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NEWTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OGLALA LAKOTA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTTAWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PENDER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PITT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PRINCE EDWARD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RICHMOND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RUSK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAN MATEO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SCOTTS BLUFF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SISKIYOU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ST. JOSEPH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STEPHENS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SWEETWATER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TIPTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TYLER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VIGO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WATAUGA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WICOMICO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WRIGHT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ALBEMARLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ARECIBO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AVOYELLES&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BEAVER&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BIBB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BRAZORIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BUNCOMBE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CAMBRIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CATOOSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHESAPEAKE CITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CLARION&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COLES&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COSHOCTON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DAKOTA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DEL NORTE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DUBOIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EL DORADO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FAJARDO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FREDERICK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GENEVA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GRATIOT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HABERSHAM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HARTFORD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HINDS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HUMBOLDT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JACKSON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KAUFMAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LA CROSSE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAURENS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LINCOLN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MADERA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MARTINSVILLE CITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MCPHERSON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MINGO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MORRIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NELSON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NORFOLK CITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OLMSTED&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PALO ALTO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PETTIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PONTOTOC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;QUITMAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ROBERTSON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SALEM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SANTA CRUZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SEWARD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SPALDING&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ST. TAMMANY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STUTSMAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TAYLOR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TOOMBS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UTAH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WALTON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WELLS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WINCHESTER CITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YAVAPAI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ALAMEDA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;APPANOOSE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AURORA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BAY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BERRIEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BRADFORD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BUFFALO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CALLAWAY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CASCADE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHEMUNG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLALLAM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;COFFEE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;COOPER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CURRY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DEER LODGE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOUGHERTY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EDDY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FAIRBANKS NORTH STAR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FORT BEND&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GEARY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRAND TRAVERSE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GUERNSEY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HARRISON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HILL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HUDSON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ISABELLA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KANE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KOOTENAI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LATIMER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LIBERTY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LYON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MARQUETTE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MCLENNAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MILLS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MOORE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NATRONA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NODAWAY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OKMULGEE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OXFORD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PERSHING&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;POINTE COUPEE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PULASKI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ROANE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SACRAMENTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SANGAMON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SEQUATCHIE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOLANO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ST. LUCIE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;STOKES&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TANGIPAHOA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TOM GREEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UNION&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WAKE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WEBER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WILLIAMSBURG CITY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YAMHILL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AIBONITO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ANDROSCOGGIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ATLANTIC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BARTON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BERKELEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOWIE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRYAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CAGUAS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CARSON CITY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHATTAHOOCHEE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CIDRA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COCHISE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CONECUH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CROW WING&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DE SOTO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DISTRICT OF COLUMBIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EASTERN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ESSEX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FOND DU LAC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GARFIELD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GORDON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GRUNDY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HARFORD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HERTFORD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HOUSTON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IOSCO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KALAMAZOO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KITSAP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAPORTE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LEVY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LUMPKIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MARIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MCHENRY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MIDDLESEX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MONTEREY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NAPA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NEZ PERCE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OHIO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OTTER TAIL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PENNINGTON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PITTSBURG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PRINCE GEORGE&apos;S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RICHMOND CITY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RUSSELL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAN MIGUEL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SEBASTIAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SKAGIT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ST. LANDRY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;STEPHENSON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TALBOT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TISHOMINGO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UINTA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VIRGINIA BEACH CITY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WAUKESHA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WILBARGER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WYANDOTTE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ALLEGHENY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ASCENSION&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BARBER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BELL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BLUE EARTH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BROOKE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BUTLER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CANYON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHAMBERS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHILDRESS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CLEARFIELD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COLUMBIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CRAIGHEAD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DARLINGTON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DESCHUTES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DURHAM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ELMORE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAYETTE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FULTON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GILMER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GREENBRIER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HAMPDEN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HEMPSTEAD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HONOLULU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HURON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JERSEY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KENTON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LAFOURCHE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LEE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LOS ALAMOS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MANATEE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MAVERICK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MERCED&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MOCA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MURRAY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NEW KENT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NYE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ORANGEBURG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PASSAIC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PIERCE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;POTTAWATTAMIE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RAPIDES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ROCKLAND&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAN DIEGO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAUK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SHERIDAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ST. CLAIR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;STARKE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUMTER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TEXAS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TULARE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VEGA BAJA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WARRICK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WHATCOM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WINSTON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YUMA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ADA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AMADOR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ASHLEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BARREN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BEN HILL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOONE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BROOMFIELD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CABELL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CARBON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHARLESTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHITTENDEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CLEVELAND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COLUSA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CREEK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DAVIE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DICKINSON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DYER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EMPORIA CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FLAGLER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GALAX CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GLYNN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GREENVILLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HAMPTON CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HENNEPIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HOPKINS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;INDEPENDENCE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JOHNSTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KERSHAW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LAMB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LENAWEE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LOUDOUN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MANITOWOC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCCLAIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MERRIMACK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MONONGALIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MUSKEGON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEWBERRY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OCEAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OSWEGO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PAYNE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PINAL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PRATT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RENSSELAER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROSS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAN JOAQUIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SCIOTO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SILVER BOW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ST. FRANCOIS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STE. GENEVIEVE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SUSSEX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TIFT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TUSCALOOSA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VERMILION&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WASHINGTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WHITFIELD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WOODBURY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALLEGANY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AROOSTOOK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BALTIMORE CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BLAIR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BRISTOL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BURLINGTON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CANADIAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CENTRE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHEYENNE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CLAY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COLORADO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COWLITZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DANVILLE CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DENVER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUPAGE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ELKO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FAULKNER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FREMONT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GILES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GRAYSON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HAMBLEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HAYS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HOKE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HUNTINGDON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JEFFERSON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KENOSHA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LACLEDE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LEAVENWORTH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LOGAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MALHEUR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAUI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MEEKER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MITCHELL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUHLENBERG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NEW HANOVER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NOTTOWAY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ONTARIO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PASCO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PICKAWAY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PORTSMOUTH CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RANDOLPH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ROCKDALE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SAMPSON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SARATOGA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SHELBY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ST. BERNARD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STANLY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUMMIT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TERRY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TROUP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VANCE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WARE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WEXFORD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WINNEBAGO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;YORK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AIKEN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ANGELINA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AUDRAIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BARTOW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BERKS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BOX ELDER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BUCHANAN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CALCASIEU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CARTER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CHAUTAUQUA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CITRUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COCKE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CONTRA COSTA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CULLMAN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DEAF SMITH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DODGE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EASTLAND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ETOWAH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FORD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GARLAND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GRADY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GUADALUPE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HARLAN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HIDALGO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HOWARD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IREDELL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KANABEC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KLAMATH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LARAMIE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LEWIS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LUZERNE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MARINETTE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MCKEAN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MIDLAND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MONTGOMERY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NASH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NIAGARA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OKALOOSA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OUACHITA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PENOBSCOT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PLACER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PRINCE WILLIAM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RILEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RUTHERFORD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAN PATRICIO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SEDGWICK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SMITH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ST. LAWRENCE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STEUBEN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TALLADEGA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TITUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UINTAH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VOLUSIA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WAYNE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WILKES&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WYOMING&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALCORN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ARKANSAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BAKER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BECKER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BINGHAM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BRAZOS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BUREAU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CAMDEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CATTARAUGUS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHESHIRE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CLARK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COLLETON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COVINGTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DALE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DELAWARE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DUBUQUE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EL PASO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FALLS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FREDERICKSBURG CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GEORGE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GRAVES&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HALE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HARVEY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HOCKING&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HUMPHREYS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JAMES CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KAY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LA PLATA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAWRENCE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LINN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MADISON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MASON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MECKLENBURG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MINNEHAHA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MORRISON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NESHOBA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NORTHAMPTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ONEIDA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PALO PINTO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHELPS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;POPE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RACINE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ROBESON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SALEM CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SANTA FE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SHASTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SPARTANBURG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ST. THOMAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SUFFOLK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TAZEWELL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TRANSYLVANIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VAL VERDE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WALWORTH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WESTCHESTER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WINDHAM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YELL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALEXANDRIA CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ARLINGTON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BALDWIN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BECKHAM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BLACK HAWK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BREATHITT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BURKE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CAMERON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CAYUGA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHESTER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CLARKE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COLLIER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COWETA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DALLAS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DELTA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DUCHESNE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ELK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FANNIN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FREEBORN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GEORGETOWN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GRAY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HALIFAX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HAWAII&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HOCKLEY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HUNT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JASPER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KENAI PENINSULA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LABETTE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LE FLORE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LITCHFIELD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MAHASKA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MATAGORDA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MECOSTA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MISSISSIPPI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MORTON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NEVADA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NORTHUMBERLAND&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ONONDAGA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PANOLA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHILADELPHIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PORTAGE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RALEIGH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ROCK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SALINE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SANTA ROSA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SHAWNEE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SPOKANE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STAFFORD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SUFFOLK CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TEHAMA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TRAVIS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VAN WERT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WAPELLO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WESTMORELAND&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WINDSOR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;YELLOWSTONE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ALLEGHANY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ARROYO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BANNOCK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BELKNAP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BLOUNT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BURNET&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CANNON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CERRO GORDO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHICKASAW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CLAYTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COLQUITT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CRAIG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DARKE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DES MOINES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUPLIN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ELLIS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAUQUIER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FRESNO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GILLESPIE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GREEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HAMILTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HAYWOOD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HOLMES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HUNTINGTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JEFFERSON DAVIS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KENT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAFAYETTE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LEBANON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LORAIN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MANASSAS CITY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MAURY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MENDOCINO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MOBILE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MULTNOMAH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NEW HAVEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NUECES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ORANGE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PASQUOTANK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PICKENS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;POTTAWATOMIE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RANKIN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ROCKINGHAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SAN BERNARDINO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SARPY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SHERBURNE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ST. CHARLES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STARK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUMNER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TETON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TRUMBULL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VANDERBURGH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WARREN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WHARTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WINONA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YUBA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ALLEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ASHE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BARBOUR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BELMONT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BOLIVAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BROOKINGS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BUTTE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CAPE GIRARDEAU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHAMPAIGN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHIPPEWA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CLEARWATER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COLUMBIANA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CRAVEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DAUPHIN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DESOTO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DUTCHESS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EMANUEL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FENTRESS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GADSDEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GLENN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GREENE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HAMPSHIRE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HENDERSON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HOOD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IBERIA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JIM WELLS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KERN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LAKE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LEFLORE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LOS ANGELES&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MANATÍ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAYAGÜEZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MERCER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MOHAVE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MUSCATINE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NEW LONDON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OAKLAND&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ORLEANS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PAULDING&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PIKE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;POTTER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RAY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ROCKWALL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SAN FRANCISCO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SCHENECTADY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SHIAWASSEE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ST. CROIX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;STARR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUNFLOWER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;THOMAS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TULSA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VENANGO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WASCO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WHITE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WISE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALAMOSA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;APPLING&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AUTAUGA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BAYAMÓN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BETHEL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRADLEY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BULLOCH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CALLOWAY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CASS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHENANGO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLARE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;COLBERT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;COOS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CUSTER&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DEFIANCE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DOUGLAS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EDGECOMBE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FAIRFAX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FRANKLIN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GEAUGA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRANT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GUILFORD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HARRISONBURG CITY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HILLSBOROUGH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HUGHES&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ISANTI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KANKAKEE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KOROR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LAUDERDALE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LICKING&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MACOMB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MARSHALL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MCLEOD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MILWAUKEE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MOREHOUSE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NAVAJO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NOLAN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OKTIBBEHA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OZAUKEE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PERSON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;POLK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PUTNAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ROANOKE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SAGINAW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SANTA BARBARA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SEQUOYAH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SOMERSET&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ST. MARY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;STORY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TARRANT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TOMPKINS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UPSHUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WALKER&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WEBSTER&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WILLIAMSON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YANKTON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ALACHUA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ANNE ARUNDEL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AUGLAIZE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BATES&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BERKSHIRE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BOYD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BUCKS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CALDWELL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CARTERET&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CHAVES&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CLACKAMAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COCONINO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COOK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CULPEPER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DEARBORN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DOÑA ANA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EAU CLAIRE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EVANGELINE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FORREST&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GARVIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GRAFTON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUAM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HARNETT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HIGHLAND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HOWELL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IRON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KANAWHA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KLEBERG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LARIMER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LEWIS AND CLARK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LYCOMING&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MARION&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MCKINLEY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MIFFLIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MONTOUR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NASSAU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NICHOLAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OKEECHOBEE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OUTAGAMIE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PEORIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PLATTE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PROVIDENCE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RIO ARRIBA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RUTLAND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SANDOVAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SEMINOLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SMYTH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ST. LOUIS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STEVENS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TALLAPOOSA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TODD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ULSTER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WADENA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WEAKLEY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WILL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WYTHE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ADAIR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ANCHORAGE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ASHTABULA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BARRON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BENNINGTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BOSSIER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BROWARD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CABO ROJO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CARLTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHARLOTTE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHOCTAW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLINTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COMAL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CRENSHAW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DAVIESS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DICKSON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EAGLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ERATH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FLATHEAD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GALLATIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GONZALES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GREENWOOD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HANCOCK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HENRICO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HORRY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;INDIAN RIVER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JONES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KING&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LANCASTER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LENOIR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOWNDES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MARATHON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MCCRACKEN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MESA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MONROE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MUSKINGUM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEWPORT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OCONEE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OTERO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PEARL RIVER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PINELLAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PRENTISS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RICE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROUTT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SAN JUAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SCOTLAND&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SIMPSON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ST. JOHN THE BAPTIST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STEARNS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SUTTER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TILLAMOOK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TUSCARAWAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VERNON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WASHOE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WHITLEY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WOODWARD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALLEGAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ARMSTRONG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BALTIMORE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BEDFORD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BLADEN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BREVARD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BURLEIGH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAMPBELL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CECIL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHESTERFIELD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CLATSOP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COLLIN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COWLEY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DANE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DENTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUNKLIN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ELKHART&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FARIBAULT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FREESTONE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GIBSON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GRAYS HARBOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HALL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HAWKINS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HODGEMAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HUNTERDON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JEFF DAVIS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KENNEBEC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LACKAWANNA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LEA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LIVINGSTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MAHONING&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MATANUSKA-SUSITNA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MEDINA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MISSOULA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MOWER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NEW CASTLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NORTON CITY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ONSLOW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PARKER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHILLIPS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PORTER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RAMSEY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROCK ISLAND&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SALT LAKE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SARASOTA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SHEBOYGAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SPOTSYLVANIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STANISLAUS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SULLIVAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TERREBONNE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TRINITY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VAN ZANDT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WARD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WETZEL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WINN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YOLO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ALBANY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ARAPAHOE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AVERY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BEAUFORT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BEXAR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BRANCH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BULLOCK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CALVERT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CATAWBA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHEROKEE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CLARENDON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CORTLAND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CUYAHOGA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DEKALB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DREW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EFFINGHAM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FAIRFIELD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRANKLIN CITY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GENESEE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRANVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GWINNETT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HILLSDALE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HUMACAO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ITASCA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KAUAI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KOSCIUSKO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LAUREL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LIMESTONE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MACON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MARTIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MCMINN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MINERAL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MORGAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NAVARRO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NORFOLK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OLDHAM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PALM BEACH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PETERSBURG CITY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PONCE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ROANOKE CITY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SAIPAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SANTA CLARA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SEVIER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SONOMA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ST. MARY&apos;S&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STRAFFORD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TATE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TOOELE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;UPSON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WALLA WALLA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WELD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WILSON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;YAUCO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ADAMS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ANDERSON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ATASCOSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BARROW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BENTON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BOULDER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BROWN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CACHE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CAROLINA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHARLOTTESVILLE CITY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHOWAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COAHOMA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COMANCHE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CRISP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DAVIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DILLON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EAST BATON ROUGE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ERIE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FLORENCE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GALLIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GOOCHLAND&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GREGG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HANOVER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HENRY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HOT SPRING&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;INDIANA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JOSEPHINE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KINGS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LANE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LEON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LUBBOCK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MARENGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MCDONOUGH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MIAMI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MONTAGUE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MUSKOGEE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NEWPORT NEWS CITY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OGEMAW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OTSEGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PEMISCOT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PIPESTONE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PRESQUE ISLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RICHLAND&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROWAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SAN LUIS OBISPO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SCOTT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SIOUX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ST. JOHNS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;STEELE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SWAIN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TIPPECANOE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TWIN FALLS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VICTORIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WASHTENAW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WICHITA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WORCESTER&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:TYPE:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;CRITICAL ACCESS&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;WOMEN&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;CHILDREN&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;REHABILITATION&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;MILITARY&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;LONG TERM CARE&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;SPECIAL&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;GENERAL ACUTE CARE&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;PSYCHIATRIC&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;CHRONIC DISEASE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:OWNER:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;GOVERNMENT - DISTRICT/AUTHORITY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NON-PROFIT&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;GOVERNMENT - STATE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PROPRIETARY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GOVERNMENT - LOCAL&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;NOT AVAILABLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GOVERNMENT - FEDERAL&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='AvgHealthSpendingPerState.csv' id='AvgHealthSpendingPerState.csv_86B3620D0FD04BA696B8B7071726BC37'>
            <properties context=''>
              <relation connection='textscan.0ovciif07tq2ws1dw40610s84bg7' name='AvgHealthSpendingPerState.csv' table='[AvgHealthSpendingPerState#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='State Code' ordinal='1' />
                  <column datatype='integer' name='Health Spending per Capita' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Hospitals.csv' id='Hospitals.csv_65838E37D7E5406FA447F19253B5699D'>
            <properties context=''>
              <relation connection='textscan.1fppqiw07vbmeq1bg1nt309p7vde' name='Hospitals.csv' table='[Hospitals#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='X' ordinal='0' />
                  <column datatype='real' name='Y' ordinal='1' />
                  <column datatype='integer' name='OBJECTID' ordinal='2' />
                  <column datatype='integer' name='ID' ordinal='3' />
                  <column datatype='string' name='NAME' ordinal='4' />
                  <column datatype='string' name='ADDRESS' ordinal='5' />
                  <column datatype='string' name='CITY' ordinal='6' />
                  <column datatype='string' name='STATE' ordinal='7' />
                  <column datatype='integer' name='ZIP' ordinal='8' />
                  <column datatype='string' name='TELEPHONE' ordinal='9' />
                  <column datatype='string' name='TYPE' ordinal='10' />
                  <column datatype='string' name='STATUS' ordinal='11' />
                  <column datatype='integer' name='POPULATION' ordinal='12' />
                  <column datatype='string' name='COUNTY' ordinal='13' />
                  <column datatype='integer' name='COUNTYFIPS' ordinal='14' />
                  <column datatype='string' name='COUNTRY' ordinal='15' />
                  <column datatype='real' name='LATITUDE' ordinal='16' />
                  <column datatype='real' name='LONGITUDE' ordinal='17' />
                  <column datatype='integer' name='NAICS_CODE' ordinal='18' />
                  <column datatype='string' name='NAICS_DESC' ordinal='19' />
                  <column datatype='string' name='WEBSITE' ordinal='20' />
                  <column datatype='string' name='STATE_ID' ordinal='21' />
                  <column datatype='integer' name='ST_FIPS' ordinal='22' />
                  <column datatype='string' name='OWNER' ordinal='23' />
                  <column datatype='integer' name='BEDS' ordinal='24' />
                  <column datatype='string' name='TRAUMA' ordinal='25' />
                  <column datatype='string' name='HELIPAD' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_pop_by_state.csv' id='us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918'>
            <properties context=''>
              <relation connection='textscan.0jrxl9f0f9l1yc1b52zbe112y0fx' name='us_pop_by_state.csv' table='[us_pop_by_state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='rank' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='string' name='state_code' ordinal='2' />
                  <column datatype='integer' name='2020_census' ordinal='3' />
                  <column datatype='real' name='percent_of_total' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[STATE]' />
              <expression op='[State Code]' />
            </expression>
            <first-end-point object-id='Hospitals.csv_65838E37D7E5406FA447F19253B5699D' />
            <second-end-point object-id='AvgHealthSpendingPerState.csv_86B3620D0FD04BA696B8B7071726BC37' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[STATE]' />
              <expression op='[state_code]' />
            </expression>
            <first-end-point object-id='Hospitals.csv_65838E37D7E5406FA447F19253B5699D' />
            <second-end-point object-id='us_pop_by_state.csv_186B775E62A2449EB4B6D5579A782918' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0o9a3630y681zw1702iwh0tmi8as'>
      <datasources>
        <datasource caption='Hospitals' name='federated.0o9a3630y681zw1702iwh0tmi8as' />
      </datasources>
      <datasource-dependencies datasource='federated.0o9a3630y681zw1702iwh0tmi8as'>
        <column caption='Owner' datatype='string' name='[OWNER]' role='dimension' type='nominal' />
        <column caption='Type' datatype='string' name='[TYPE]' role='dimension' type='nominal' />
        <column-instance column='[OWNER]' derivation='None' name='[none:OWNER:nk]' pivot='key' type='nominal' />
        <column-instance column='[TYPE]' derivation='None' name='[none:TYPE:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]'>
        <groupfilter function='level-members' level='[none:OWNER:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]'>
        <groupfilter function='level-members' level='[none:TYPE:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter Owner' name='[Action3_84F94F61FFEF402CAE0CBED5C462BA99]'>
      <activation type='on-select' />
      <source dashboard='Final - Hospital' type='sheet' worksheet='Distribution of US Hospitals' />
      <link caption='Filter Owner' delimiter=',' escape='\' expression='tsl:Patients%20by%20Type%2FOwner?%5Bfederated.0o9a3630y681zw1702iwh0tmi8as%5D.%5BSTATE%5D~s0=&lt;[federated.0o9a3630y681zw1702iwh0tmi8as].[STATE]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Patients served by types of Hospitals by each state' />
        <param name='target' value='Patients by Type/Owner' />
      </command>
    </action>
    <action caption='Select State' name='[Action4_38A4B26ADFF049ECACD0E46B08DB763F]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0o9a3630y681zw1702iwh0tmi8as' type='datasource'>
        <exclude-sheet name='Patients served by types of Hospitals by each state' />
        <exclude-sheet name='Patients served by owner of Hospitals by each state' />
      </source>
      <link caption='Select State' delimiter=',' escape='\' expression='tsl:Patients%20by%20Type%2FOwner?%5Bfederated.0o9a3630y681zw1702iwh0tmi8as%5D.%5BSTATE%5D~s0=&lt;[federated.0o9a3630y681zw1702iwh0tmi8as].[STATE]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Patients by Type/Owner' />
      </command>
    </action>
    <datasources>
      <datasource caption='Hospitals' name='federated.0o9a3630y681zw1702iwh0tmi8as' />
    </datasources>
    <datasource-dependencies datasource='federated.0o9a3630y681zw1702iwh0tmi8as'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
    <nav-action caption='Go to Dashboard' name='[Action3_C7B48BD1534F47648C370CAE74F5A6FC]'>
      <activation type='on-select' />
      <source dashboard='Final - Hospital' type='sheet' worksheet='Distribution of US Hospitals' />
      <params>
        <param name='sheet' value='Patients by Type/Owner' />
        <param name='single-select' value='' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='Distribution of US Hospitals'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribution of US Hospitals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Hospitals' name='federated.0o9a3630y681zw1702iwh0tmi8as' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0o9a3630y681zw1702iwh0tmi8as'>
            <column caption='State population' datatype='integer' name='[2020_census]' role='measure' type='quantitative' />
            <column caption='Hospitals' datatype='real' name='[Calculation_111675215406559234]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([NAME])/countd([STATE])' />
            </column>
            <column caption='Bed per 1000 people' datatype='real' name='[Calculation_87609105536208896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([POPULATION])*1000/sum([2020_census])' />
            </column>
            <column caption='Name' datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column caption='Owner' datatype='string' name='[OWNER]' role='dimension' type='nominal' />
            <column caption='Number of beds' datatype='integer' name='[POPULATION]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State2' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Type' datatype='string' name='[TYPE]' role='dimension' type='nominal' />
            <column-instance column='[OWNER]' derivation='None' name='[none:OWNER:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[TYPE]' derivation='None' name='[none:TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_111675215406559234]' derivation='User' name='[usr:Calculation_111675215406559234:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87609105536208896]' derivation='User' name='[usr:Calculation_87609105536208896:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[Latitude (generated)]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[Longitude (generated)]' field-type='quantitative' max='-5202139.8784153685' min='-15195674.747267583' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[Latitude (generated)]' field-type='quantitative' max='8111686.8481454877' min='608848.09440253582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' value='bold' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]' value='n#,##0;-#,##0' />
            <format attr='font-weight' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' value='bold' />
            <format attr='color' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]' max='6.7271127679999996' min='1.847304466' num-steps='5' palette='brown_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' value='false' />
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='omit-on-special' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='map' value='State population'>
              <formatted-text>
                <run>State population</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='true' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' />
              <text column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]' />
              <size column='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]' />
              <color column='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]> (<[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]>) ]]></run>
                <run>state has</run>
                <run bold='true'><![CDATA[ <[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]> ]]></run>
                <run>hospitals</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Tooltip - Statewise Hospital Information" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#ffffff' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o9a3630y681zw1702iwh0tmi8as].[Latitude (generated)]</rows>
        <cols>[federated.0o9a3630y681zw1702iwh0tmi8as].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F92E352C-B3B6-4C15-A3D6-12019366884F}' />
    </worksheet>
    <worksheet name='Patients served by owner of Hospitals by each state'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Patients served by hospitals per owner type in <]]></run>
            <run>[federated.0o9a3630y681zw1702iwh0tmi8as].[STATE]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Hospitals' name='federated.0o9a3630y681zw1702iwh0tmi8as' />
          </datasources>
          <datasource-dependencies datasource='federated.0o9a3630y681zw1702iwh0tmi8as'>
            <column caption='Owner' datatype='string' name='[OWNER]' role='dimension' type='nominal' />
            <column caption='Number of beds' datatype='integer' name='[POPULATION]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State2' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Type' datatype='string' name='[TYPE]' role='dimension' type='nominal' />
            <column-instance column='[OWNER]' derivation='None' name='[none:OWNER:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[TYPE]' derivation='None' name='[none:TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[POPULATION]' derivation='Sum' name='[sum:POPULATION:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action2_DFC849924A8D45E08BA793787A95DA81]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[Action (State)]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]' value='220' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]' />
              <lod column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</rows>
        <cols>[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:POPULATION:qk]</cols>
      </table>
      <simple-id uuid='{03C2B8B6-ADCE-4BD6-9D6F-3735A41C3154}' />
    </worksheet>
    <worksheet name='Patients served by types of Hospitals by each state'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Patients served by hospitals per care type in <]]></run>
            <run>[federated.0o9a3630y681zw1702iwh0tmi8as].[STATE]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Hospitals' name='federated.0o9a3630y681zw1702iwh0tmi8as' />
          </datasources>
          <datasource-dependencies datasource='federated.0o9a3630y681zw1702iwh0tmi8as'>
            <column caption='Owner' datatype='string' name='[OWNER]' role='dimension' type='nominal' />
            <column caption='Number of beds' datatype='integer' name='[POPULATION]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State2' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Type' datatype='string' name='[TYPE]' role='dimension' type='nominal' />
            <column-instance column='[OWNER]' derivation='None' name='[none:OWNER:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[TYPE]' derivation='None' name='[none:TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[POPULATION]' derivation='Sum' name='[sum:POPULATION:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action2_DFC849924A8D45E08BA793787A95DA81]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[Action (State)]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]' value='220' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]' />
              <lod column='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]</rows>
        <cols>[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:POPULATION:qk]</cols>
      </table>
      <simple-id uuid='{45650157-1B61-469F-9486-5941B0CA132B}' />
    </worksheet>
    <worksheet name='Tooltip - Statewise Hospital Information'>
      <table>
        <view>
          <datasources>
            <datasource caption='Hospitals' name='federated.0o9a3630y681zw1702iwh0tmi8as' />
          </datasources>
          <datasource-dependencies datasource='federated.0o9a3630y681zw1702iwh0tmi8as'>
            <column caption='State population' datatype='integer' name='[2020_census]' role='measure' type='quantitative' />
            <column caption='Bed per 1000 people' datatype='real' name='[Calculation_87609105536208896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([POPULATION])*1000/sum([2020_census])' />
            </column>
            <column datatype='integer' name='[Health Spending per Capita]' role='measure' type='quantitative' />
            <column caption='Owner' datatype='string' name='[OWNER]' role='dimension' type='nominal' />
            <column caption='Number of beds' datatype='integer' name='[POPULATION]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State2' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Type' datatype='string' name='[TYPE]' role='dimension' type='nominal' />
            <column-instance column='[OWNER]' derivation='None' name='[none:OWNER:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[TYPE]' derivation='None' name='[none:TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020_census]' derivation='Sum' name='[sum:2020_census:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Spending per Capita]' derivation='Sum' name='[sum:Health Spending per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[POPULATION]' derivation='Sum' name='[sum:POPULATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87609105536208896]' derivation='User' name='[usr:Calculation_87609105536208896:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:POPULATION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:2020_census:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:Health Spending per Capita:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0o9a3630y681zw1702iwh0tmi8as].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:POPULATION:qk]&quot;</bucket>
              <bucket>&quot;[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:2020_census:qk]&quot;</bucket>
              <bucket>&quot;[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[Tooltip (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action - Tooltip - Statewise Hospital density (2)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0o9a3630y681zw1702iwh0tmi8as].[Tooltip (State,State2)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Tooltip - Statewise Hospital density (2)]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[STATE]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[Tooltip (State)]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[:Measure Names]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[Tooltip (State,State2)]</column>
            <column>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[sum:Health Spending per Capita:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0o9a3630y681zw1702iwh0tmi8as].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o9a3630y681zw1702iwh0tmi8as].[:Measure Names]</rows>
        <cols>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]</cols>
      </table>
      <simple-id uuid='{172DB565-9DF3-43EF-A57D-5CAE39414907}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Final - Hospital'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Hospitals' name='federated.0o9a3630y681zw1702iwh0tmi8as' />
      </datasources>
      <datasource-dependencies datasource='federated.0o9a3630y681zw1702iwh0tmi8as'>
        <column caption='Owner' datatype='string' name='[OWNER]' role='dimension' type='nominal' />
        <column caption='Type' datatype='string' name='[TYPE]' role='dimension' type='nominal' />
        <column-instance column='[OWNER]' derivation='None' name='[none:OWNER:nk]' pivot='key' type='nominal' />
        <column-instance column='[TYPE]' derivation='None' name='[none:TYPE:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='31' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='14' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='98000' id='3' name='Distribution of US Hospitals' w='98400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9500' id='8' name='Distribution of US Hospitals' pane-specification-id='0' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]' type-v2='color' w='14000' x='1800' y='76000' />
        <zone h='16000' id='9' name='Distribution of US Hospitals' pane-specification-id='0' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]' type-v2='size' w='12100' x='2000' y='42125' />
        <zone h='7250' id='12' mode='dropdown' name='Distribution of US Hospitals' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]' type-v2='filter' values='database' w='16800' x='81700' y='50875' />
        <zone h='9750' id='15' mode='dropdown' name='Distribution of US Hospitals' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]' type-v2='filter' values='database' w='17100' x='81600' y='42000' />
        <zone h='16625' id='32' name='Distribution of US Hospitals' pane-specification-id='0' type-v2='map' w='16600' x='2200' y='59000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='52' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='51' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7250' id='12' mode='dropdown' name='Distribution of US Hospitals' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]' type-v2='filter' values='database' w='16800' x='81700' y='50875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9750' id='15' mode='dropdown' name='Distribution of US Hospitals' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]' type-v2='filter' values='database' w='17100' x='81600' y='42000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Distribution of US Hospitals' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='8' name='Distribution of US Hospitals' pane-specification-id='0' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]' type-v2='color' w='14000' x='1800' y='76000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16000' id='9' name='Distribution of US Hospitals' pane-specification-id='0' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]' type-v2='size' w='12100' x='2000' y='42125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16625' id='32' name='Distribution of US Hospitals' pane-specification-id='0' type-v2='map' w='16600' x='2200' y='59000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AD53A701-35E8-44A8-80F9-998082AF8629}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Patients by Type/Owner'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='63750' id='3' name='Patients served by types of Hospitals by each state' w='98400' x='800' y='35250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34250' id='9' name='Patients served by owner of Hospitals by each state' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6250' id='27' type-v2='dashboard-object' w='25400' x='71900' y='73875'>
          <button action='tabdoc:goto-sheet window-id=&quot;{C5DDFBB7-4055-4B2B-B1DE-9321E958A8DC}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Go back to main map</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='56' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='266' h='34250' id='9' is-fixed='true' name='Patients served by owner of Hospitals by each state' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63750' id='3' is-fixed='true' name='Patients served by types of Hospitals by each state' w='98400' x='800' y='35250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='27' type-v2='dashboard-object' w='25400' x='71900' y='73875'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{C5DDFBB7-4055-4B2B-B1DE-9321E958A8DC}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Go back to main map</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BBFA4EFC-4869-40C8-A3A4-64ACC59AFBFA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Distribution of US Hospitals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_111675215406559234:qk]' type='size' />
            <card pane-specification-id='0' type='map' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:COUNTY:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[usr:Calculation_87609105536208896:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7296A18B-43AA-435D-9005-7A30EB1759A3}' />
    </window>
    <window class='worksheet' name='Tooltip - Statewise Hospital Information'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:CITY:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:COUNTY:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D1C5A4A-4FB1-4082-B4D4-599F5366DDA0}' />
    </window>
    <window class='worksheet' name='Patients served by owner of Hospitals by each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63E7D362-52BB-4BF0-81BA-8DFFF0B30AE5}' />
    </window>
    <window class='worksheet' name='Patients served by types of Hospitals by each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:State:nk]</field>
            <field>[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90A30185-3859-4FF0-B9D1-32430DB227CF}' />
    </window>
    <window class='dashboard' name='Patients by Type/Owner'>
      <viewpoints>
        <viewpoint name='Patients served by owner of Hospitals by each state'>
          <highlight field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:OWNER:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Patients served by types of Hospitals by each state'>
          <highlight field='[federated.0o9a3630y681zw1702iwh0tmi8as].[none:TYPE:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3D1BC352-35C6-4AE2-B918-CCF665C86B6F}' />
    </window>
    <window class='dashboard' maximized='true' name='Final - Hospital'>
      <viewpoints>
        <viewpoint name='Distribution of US Hospitals'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{C5DDFBB7-4055-4B2B-B1DE-9321E958A8DC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Distribution of US Hospitals' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Final - Hospital' width='192'>
      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
      jXu5+vwBCceh80PxEtwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Patients by Type/Owner' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Patients served by owner of Hospitals by each state' width='192'>
      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
      ZKCuRpirAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Patients served by types of Hospitals by each state' width='192'>
      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
      F/Bf1lSuF9EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='Tooltip - Statewise Hospital Information' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABUCAYAAADUKzhSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYkElEQVR4nO2daVgUV/q377AoA5GoiEtQjEaMK5rQUZbQggiaAQcdUKOgvmoIJC4QxBhD
      FIkBNSBGCUaiuIKOCzOiuLI4trviLoYIL5txwAU1TWiRbtr/h4YWBEUBldh1X1d/6DrnPPVU
      9Xn6PKeqTv3eePjw4UMEBDQUrVftgIDAq0QIAAGNRggAAY1GCAABjUYIAAGNRggAAY1GCAAB
      jUanrgppaWkvww8BgVfCG8KNMAFNRkiBBDQaIQAENBohAAQ0GiEABDSaBgRAHus9RIhEn7Ll
      RpXNkiBEHuvJa7BrVfa03gNRkKQRLT4DimziA0ZgKxK9/H0LvDQaPAL07w/Ra0+haAxvmhAl
      B6JYWPB3Yo6lkRYsftXuCLwgGhwAJuM+w+ngFg5IG8OdpsPtW4XQrQfdm71qTwReJA2fA+gM
      4J//zGH15qs1y/LW41E1Har2XUKQaDgzFwTgbm+FyMoen+hdbJk3HnsrESLbsUSeKXlk638p
      LBxvj5VIhO2IeewpqBhzqqYqVvaMX3oKVSyqUrQgiZRTS8diKwri8URGemopk51sEYlE2I4I
      YP1FVUtJkAi3yN9gtz8iIQV6rWmUSXB3T2+6/TsOSUnddR+nte1MNiQd59h3A0lLPMlbk6JJ
      On6M5UNvsGnPhSo1u/FJdBLHTxwguN9JFoTupggFZ5bOINkikpS0NNIORWN/fibf73/kSFbM
      PDa9PY/9J4KplsjciGe2bxr9FidwIu0ECTMM2OT9PftLQBycRvz098A5grQ0IQV6nanzUYhn
      wsCBMUMi+DnxBuIOz9PQkI5dOqCvAzRvDoZd6dlFHx3ApFMH5NlVZhZvd6aLvg7QmsETx2A6
      +izpmHFJUsjpgpFYL3lU9b3C24++DJpB+JiuNQ605MwxTlt7EP5+a3SA1oMnM66rG8fOwFCh
      v2sMjRMA6GAxYTJM2MCZ2Y1j8amU3kemq1PhvCHuKw7w9YDHD0WVaHXrVrPzCwhU0nj3Adq5
      MKrfTjbtvld9e8E1rpeBQpbD4cQTFNTX/oMHlAEK2a/ERcZT4jSIfnTnQxtIiIrm3B0FoEBW
      cJnjV4rqNGdgYc2Hx+JYfe4OChTcSV3DpuzBWFvU10GBvyKNeCPMgKGfepJz6OijTSa2/L17
      CjOtrXCcEEX222YY18t2a/pJN+NiK8JS/BnbDLxZGSjGAB0GfPEjPsYH8Xe2RCSyxXn6Ci7f
      16vbZDs3Fi8TcWG2K5YiS1yXlzAu+luGGtTVsOL+R+XEOG89HiIRwjz5r4nwNKiARiM8CiGg
      0QgBIKDRCAEgoNEIASCg0dR5iVwmk70MPwQEXgnCCCCg0QgBIKDRCAEgoNEIASCg0QgBIKDR
      NCgApJfjCPR0xkEsxsHZE/+oQxSWN5ZrTZWjhIinEJdfv9alpaVERkbi4uKCWCzGxcWFLVu2
      oFQqAUhOTmbs2LHY2dnh4ODA3LlzKS4uBkCpVHLu3Dm++eYb/Pz8KCmpewFGYWEh48aNIygo
      qEaZQqEgNDQUNzc3bt26BYBcLicyMhJHR0ccHBwICwt74pXAP//8k/DwcBwdHbGzs8PPz09t
      R6lUsnnzZlxcXLCzs8PLy4ucnBx124KCAiIjI/H09CQ9Pf35TmIjUv8AkKUQ5rubNjNiOSCR
      sPdf3+Fy/zBHr6uKj4aImfIcvSQ/bgrikKN1V/yLU1JSQteuXdm4cSMSiYSYmBhOnTrFhQsX
      KC8vRy6XExoaSmpqKnv27KFTp05s2rQJgCNHjpCQkMDEiRPp1q1bnftSKpUkJCTwwQcfoK+v
      X6P8/Pnz3L9/n+7du6u37dixA21tbRISEti3bx9t27YlLi6uVvsrV67knXfeISEhgaSkJKyt
      rdm4cSMAJ0+eJD09ndjYWFJTUxk/fjzLly9HKpVy69YtIiIi+PDDD3F2dq7PaWw06h8A13PJ
      kvdmwIBWaAPNWnRlcMC3uJk2nnOvI0ZGRjg7O9OqVSsA2rVrR58+fSgtLUVbW5uPP/6YLl26
      oKWlRfPmzbG0tEQulwMgFouZP38+HTt2fKZ9Xb58GalUioODQ42y4uJiEhMT8fT0pFmzRwuf
      CwoKGDFiBPr6+ujq6uLu7s4ff/yBVFpz0befnx/u7u7qumKxGF1dXQAyMzNxcHCgZcuWaGlp
      8dFHH2FqasqDBw8wNjYmLCwMS0tLtLRebRZe/72b9KCPYSorF6eSJ6ua9+QTN0XMnP2QGe2J
      WCxW/7MX/Xch/8/VSbXNyRX/DRnIUI0WntGZsH+OqmxKHPkA0jNEealSLLHTWAITcqmRYR0N
      QTz6GxYHjsVJLMbB2Zc1lyt/LClnoj7H1UmMWOzE2MA41EVPa5cfx5RKH2r73khIpVK2b9/O
      tWvXMDc3r1Yml8s5e/YsGzZswMnJ6bltl5aWsmvXLsaMGVOtg1eyb98+RCJRjWBq3rw5e/bs
      QS6Xo1QqKSkpobi4mD/++KOGDR2dR/dR5XI5iYmJ9OnTBwArKyuSkpIoKipCqVRy5MgRdHR0
      1IHfVKh/AOjb8PXqeVjeWIXXMCecvb4n/rIUMMUjRsLCoWDmHYtEIkESaKNq096ZebGJSCQS
      Dm75FJ3VS9n1P7AJlBDrbQZDF6rqx3hgyk0S5i2nzEuVYh3c4oP+2m9Yn1mbM62w9lvPAUky
      G3wM+Pe3G7kE3EyYx1dn+7Jgy0EkB7fgo78N37AUZHW0e9HcunULNzc3XF1dycvLw9/fHwOD
      RwsRgoKCcHBwYOXKlXz++efVUpRnJTk5mX79+mFqWnNIzs/PJzc3l6FDh9YoGzduHHl5eQwb
      NozBgwcTGBhIQUFBrSNAJYWFhcyfP58+ffpgb28PgJmZGZ988glTpkzBzs6Offv2MWHChGpB
      0xRokDfa7QcxNWIQPrIbXPhPGN/5zkKxNpoxT0iDdBWXiPl8Difyi1EN6mb0e9ILhWTnOXk2
      hyNnXflPlc1DbwJmj9Vt8TadjVX/cibDnbEKW8PFfBnGJ88ycEwo5q20gVYMGj+KdzxPcA4H
      bJ7YDvrW73Q8M8bGxsTHx/PgwQMuXbpESEgI06ZNw8TEBIDg4GCCgoL4/fff2bx5MxYWFgwZ
      MuSZ7RcUFJCRkcG0adNqlCkUCnbs2MGIESPQ1dWlrKysWnmLFi1YsGCB+rtMJiMsLIy2bdvW
      uq/z58+zc+dO/Pz8MDZ+tNzp4sWL7N27l3Xr1mFoaMjx48dZtmwZM2fOrBbsr5pGCUdt/XZ8
      4DGDUamepB7/H2NM366l1jnWfr2ZZr7r2OtoTDOOEiJeU4dlc3y3/4Rb7ee+dsoVKNDhuf9o
      qrZ7SW/5at68OSKRiOLiYlJSUpgwYYK6TEtLC1NTUyZPnsyKFSuwtraudSJbG0lJSezcuZOd
      O3dW237q1ClmzpzJvn372L59e7WygwcPEhwcrP4Hr+T3339HLpfTokWLGvvJzMxEIpHw1Vdf
      oadXfRVeUlISLi4utGzZEgAbGxuOHDlCbm4uvXv3fqbjeBnUPwU6Ec3sNcfILi4DypH99l8k
      ua0x76Xq/PpvGnIjK4u75VBeXg48oPS+Pq3bvUWzchl5x06RXcWcwZstIPsqWWVAeTnl+v2x
      ML/Ixsg9XC8DKKM4+xhnakvEFWWUlQPld7kYswmJmRirt/XpP/ADTm5Zx8W75VB+l0Mbt5E7
      yJL3n9quouzGdQrKoFyWx7F9p7lRy27rQ3p6OsnJyepLmPfu3SM1NZU2bdpw9+5d4uPjuXnz
      JkqlErlczqFDh1AqlbXm8U9iwoQJqlSy4vPzzz/j7OxMfHw81tbW7NmzR122d+9e7O3tiY+P
      x97enqKiIq5fv45SqaSwsJDly5czePDgGh0cICUlhWHDhtVaZmpqyr59+5BKpSiVSq5cuUJe
      Xh5vvfVW/U/eC6D+I8C7IsyTV/Ol29fcLQW9Vr1xmrcSn4r84f2Rn9Nv9iJc7eej948lHAj4
      kDGfdWDql0PYofce9pPfx6iKOSPHiXgkfov3kLXQ15eNUW6M+HYBOcERTBqyiFL0aNVbzPQ5
      1jV9+X07M/8Ry91iaPHePwkN/wRTANfv+OH32cwdY8/dUj1MbCeybLYD+nW1M7HB6d2pfDNk
      P3qmlowb8241X6tyNETMnGxvYmM8MOUoIeI5ZHvHEuNRex7YsmVLtm3bxuLFi3nw4AGGhoaM
      GjUKR0dHysvLKSkpwcfHh9u3b6Orq8uAAQPw9/dHR0eHtWvXsnbtWrWtrVu3YmBgQHh4OO3a
      tWP+/Pn4+/vTtWvX5/klq1FSUsK8efPIzc3lzTffZPz48djZ2QGqiXVgYCCjR4+mb9++XL58
      WX2JtpLevXsTHh7OiBEjWLNmDaNHj6a0tJSOHTvi6+tLx44dSU9PJyAgoMZ9jEmTJjFp0qR6
      +14f6lwT3OQfhz4agnjNOxUd8CW0a6IcOXKE9PR0vLy8XtilxatXr7J9+3ZmzZqlvtz5V0d4
      FOI1QKlUkpmZibu7+wu9rp6ens6oUaNem84Pr8MIICDQAIQRQECjEQJAQKMRXowloNEII4CA
      RiMEgIBGIwSAgEYjBICARtMIMqmVHyvs3b9g5annV8t72TKoZTcvs2tlAOPtrWq+1lx6iqVq
      LbJHumFANT0yK/vxLEwteO3UMTWNBo8AzhFpKh2ttENscHvI+q+jOdMYnr0wJCz5bAVZJkN4
      v638sbIbxM/2JU0Uwe4TFbphfksqtM8UnFn6OVEPJ7LpWBqHou3JCAwgrjEFkQVeOo2YAjWj
      k7UlXaV/Ug+tvJeImDk7VvDl8J4YPf4o4PVkdp62xuPT92mto0PrwV8wuetuEg6VAKfY8+9m
      uE0ZSadm0Kz7BKa6FrA98cqrOAiBRqLRAkAhy2FX1CZuuw6lUmVIemop4+2t1DKk8ZWid4oC
      UhdWyKFa2eO7rXbhJEmQiOEzFxAwwlaVYvlEo85IqqQqItsRBMRnV6QjEoJEHqzPzibezwWr
      51Gt//9XSX/PnN7q9Rrt6NRZl6s5eZCXSYb8A/r2qizTwaRTJwqyc5t4wAs8jQYHwG5/1RzA
      UjyJDYa+xMy2xgBUMqThZXwRf5i0ChnSXwJiuApcjZlKYIY9K1JOkHZ8Pwv//hThpNa2fLX1
      MGnHtjLDYAuzYi6gSlXCKfsinsNpaZxImIHBLwHEqKWKpaSGLCLbbQ2H4ibSuQHHZ2LalYKb
      t2sv6/QOFN6i9lKBvwINXhHmHJFGsBgok5K1/3umDE8ndPcsepw5xunsQ5x22la1NoXkkSPJ
      x8l7Mj0rHszXN3iyG4Ydu9C2GUAnRrraEhJ9nrwSY46dzubQaSeqWS8EugOU0NEjnFm2hg09
      PK7nZ9OhbRsgp2bZtVxoP5A2Dd6LwKui8VYoNzOk23AXLIN/JC0begD0n8Xu1WNoV61iXi1d
      6dlQKBSgUymP2p9Zu1czpl1tNTvQ/d16dP53u9P7t7Okl0Bn1TDGtTw53S06Q+d79NDdzqUr
      IO4FoOD6tWt06PoOTWeFq8Dz0oiT4DJuJqVwQteE9kZgYDGA/ufXsGTXNVQrGqVkHT5NHib0
      7GvI4f17uVkGClkBOb8/+dKp4sEDFIDizjmi16fy3uCPMDGwYED/86xZsotrFcslpVmHOd3Q
      KzImQ/jHh8eIW32OOwoFd1JXsCZ9ME6DDIAB/P2fZcTH/IdrZVB2dQNRCS1xcexVp1mBpkuj
      zQFEImvcwq4xbEkwzkZAOzcW/GDH7chxWItEiBzcCU26A+gw4ItFDM//AVdrEfbjlnD4zpPt
      52+ehqOVCEtnf070X0KkR2egHW4LfsDudiTjrEWIRA64hybxFDOPkARV+OtG5G+P/PdYn6ey
      u3gZojR/nC0fl07VweLLn5n6xnrGWYsY5H2QHiFRTOleaVaESD3hlhCktinQlGnST4NKgkRE
      d40nbmJDprECAk9GeBRCQKNp0iOAgMCLRhgBBDQaIQAENBpBJlVAoxFGAAGNRggAAY1GCAAB
      jUYIgNecxMREtXCdQE2EABDQaBoQACotsOrCjqptz6MO+Wx2H68SxxRxCHVqSkovExfoibOD
      GLGDM57+URx6/XVcAcjJycHLy4vw8HDGjRtHREQEpaWlgOo15+vWrVNLmE6cOJGsrCxAJZ/k
      5+eHg4MDdnZ2eHp6cuVK7aveKqWexGKx+lP5+nalUklWVhahoaFMnDixxiiUlZWlfvW6j48P
      hYWFL/BsPJmmJdhUG/lxTPHMZbIkEJvnaigjJcyX3W0WEntgAK3Ki8k+Es2mo9cZ9JpLWZaW
      lhITE4O3tzcFBQWYm5tz9epV7t+/j56eHjt27OD+/fvExsZiaGjI4cOHWbduHXPnzuXevXuM
      Hj2axYsXo6urS1paGqtWrSI4OBhDw+qPmN++fZuPPvqIL7/8soYPGRkZbNiwgUmTJnHgwIFq
      ZSUlJfzyyy/4+PgwcOBAEhIS+Pnnn5k7d+5L1xBr+gFQb66TmyWn97QBtNIGtFvQdXAA375q
      t14CxcXF6Orq0rNnTwoLC9HX18fR0VFd7u7uXq2jWVhYcOHCBRQKRQ21yl69emFkZFSh8lOd
      e/fuYWRUu3RIr169WLRoEaCSS6pKRkYGHTp0wMrKCi0tLZydnbl06RIFBQV06tSp3sddH17s
      HKA8l4QKGVKxgzNeUWeofPI/M/Zz3JwdEFeozIek1DJROxqC2DOaTPYzRyxGXE2hvZBTawLx
      dHZALHZi6pbHJVRN6NHHkNSVi0nNk9WQV82Pm4J4egjhFTKsTmNDOKBOj6ScifJSpU5iJ8YG
      JpD7F8qcWrVqhYGBARs2bKhT3lSpVJKSkkKbNm2qidcplUquX79OVFQU3bt3r1XetKioqF4d
      ViqVYmZmptYy0NPTw8zMjLt37z63rYbS4ADYP0dcJQf0JFotY1rOuZ8C+G//cBIlEiR7l2F7
      cQ5hKTKglOb9p7Ni2wGVTtXCgVwIXcOJx43bBCKJ9caMoSyUSJBIYqiqPNTScga/7Ewh+afh
      3PplC6erNdbH5uvVzLO8wSqvYTg5e/F9/GWqL715l1HLdpJyMIFw22wWh++jCJW86vIyL2IP
      SCrkVdfyTe36rE0SHR0dpk2bRvv27dmyZQvTpk1DIpGgVCqr1fvzzz9ZtGgRb7zxBp988ol6
      +8GDB7Gzs8Pb25t+/frh7u5e637u3LlDUFAQYrEYR0dHQkNDKS4urtO/+/fv11CKLCsro6io
      qB5H2zAanAINXSghUJ2c5xM3xZNUADI5ffQmZwrHMiTyUX2zwtuACc2K9jA/0I/0u6WVlmqK
      YD+V9nTv1U6l99WyNS3k0prttdszaGoEg3xk3LjwH8K+82WWYi3RlTqu7TvRWV8loWruMph3
      PM+TgT0lJ8+Sc+QsrnXqszZd9PT0GDlyJLq6upiYmLB161a0tbWxsVH9WPn5+axatYrJkyfT
      pUuXam3t7e2xt7fn7t27pKSk8OOPPzJ9+vQayjATJkxQK1tKpVL+9a9/sXbtWmbMmPFU3/72
      t7/V0Adr1qzZE9OpF8kLngMYMmJpAv4W2tU3FyWwaO6vDFi1g5/e00e7YqL7wtDWp90HHswY
      lYpn6nH+V5uQsbIcha4OlZ6a+27np+fSZ226dOzYkbFjx/Lrr78CqtRl8+bNBAQEPFW1sVWr
      Vri7uxMWFkZWVhY9e/Z8Yl1DQ0NGjhzJihUrkMlkT5V0NTQ05Pz58yiVSrS0tCgtLSUzMxOx
      WFz/g6wnL3AOYIaFJez+JUYlU0o5shtXOJVRBA9KuY8Rbdo2R7vsFldOpj9ZhtTgTVqQzVWV
      fiq1zMWewAmiZ6/hWHYxZUC57Df+K8mltXkv1CrGDx5UrFe+zp6Yf1M0+CPM0ae/hTkXN0ay
      R6XPSllxNsdq1Wdtmty6dYvIyEjy8/N5+PAhMpmMHTt2qLV+JRIJNjY2tXb+nTt3kpGRgVwu
      V8ub5uTk1NAJLikpISIigl9//RWlUolMJmPr1q20b9++Tj3jHj16UFBQwPHjx1EoFOzevZuH
      Dx/SoUOHxjsJz8gLHAG0sfh0EZMXL2KOeyzFcl1amPZj1MzvGdDjYyb8YwfBrvZEmohw/bgD
      RpTVbsbIkYkeiXzrPYS19MV3YxRuz7T/dxGZJ7P6Sze+Vum40ttpHit9qujAn1jGKKf5FRKq
      3vw4ywZ9QH/EtyzICSZi0hAWVUjAiqfPwZrnl0V9FbRs2ZI2bdrg5+fH7du30dfXZ+zYseor
      QZcuXSI5OblaG2NjY1auXImRkRFLliwhM1M156kqb1pVJnXgwIEMHz6c8PBwfvvtN7S1tRk2
      bBhTp04FVPOIoKAgtf2tW7cCqMW4P/vsM4KDgwkMDMTc3PyVXAIFDRbJy4+bgmfuZCSBz3d3
      4a9GYmIiAwcOxNj4KS8fe0YEmVQBjeZ1lEn9PzAR2KbVYf+0AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
